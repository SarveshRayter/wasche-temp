/*!

=========================================================
* Argon Dashboard - v1.1.0
=========================================================

* Product Page: https://www.creative-tim.com/product/argon-dashboard
* Copyright 2018 Creative Tim (https://www.creative-tim.com)
* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md)

* Coded by www.creative-tim.com

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

*/
"use strict";
window.$a=null;
var map, lat, lng, Datepicker = function() {
        var e = $(".datepicker");
        e.length && e.each(function() {
            ! function(e) {
                e.datepicker({
                    disableTouchKeyboard: !0,
                    autoclose: !1
                })
            }($(this))
        })
    }(),
    CopyIcon = function() {
        var e, a = ".btn-icon-clipboard",
            t = $(a);
        t.length && ((e = t).tooltip().on("mouseleave", function() {
            e.tooltip("hide")
        }), new ClipboardJS(a).on("success", function(e) {
            $(e.trigger).attr("title", "Copied!").tooltip("_fixTitle").tooltip("show").attr("title", "Copy to clipboard").tooltip("_fixTitle"), e.clearSelection()
        }))
    }(),
    FormControl = function() {
        var e = $(".form-control");
        e.length && e.on("focus blur", function(e) {
            $(this).parents(".form-group").toggleClass("focused", "focus" === e.type || 0 < this.value.length)
        }).trigger("blur")
    }(),
    $map = $("#map-canvas"),
    color = "#5e72e4";

function initMap() {
    map = document.getElementById("map-canvas"), lat = map.getAttribute("data-lat"), lng = map.getAttribute("data-lng");
    var e = new google.maps.LatLng(lat, lng),
        a = {
            zoom: 12,
            scrollwheel: !1,
            center: e,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            styles: [{
                featureType: "administrative",
                elementType: "labels.text.fill",
                stylers: [{
                    color: "#444444"
                }]
            }, {
                featureType: "landscape",
                elementType: "all",
                stylers: [{
                    color: "#f2f2f2"
                }]
            }, {
                featureType: "poi",
                elementType: "all",
                stylers: [{
                    visibility: "off"
                }]
            }, {
                featureType: "road",
                elementType: "all",
                stylers: [{
                    saturation: -100
                }, {
                    lightness: 45
                }]
            }, {
                featureType: "road.highway",
                elementType: "all",
                stylers: [{
                    visibility: "simplified"
                }]
            }, {
                featureType: "road.arterial",
                elementType: "labels.icon",
                stylers: [{
                    visibility: "off"
                }]
            }, {
                featureType: "transit",
                elementType: "all",
                stylers: [{
                    visibility: "off"
                }]
            }, {
                featureType: "water",
                elementType: "all",
                stylers: [{
                    color: color
                }, {
                    visibility: "on"
                }]
            }]
        };
    map = new google.maps.Map(map, a);
    var t = new google.maps.Marker({
            position: e,
            map: map,
            animation: google.maps.Animation.DROP,
            title: "Hello World!"
        }),
        o = new google.maps.InfoWindow({
            content: '<div class="info-window-content"><h2>Argon Dashboard</h2><p>A beautiful Dashboard for Bootstrap 4. It is Free and Open Source.</p></div>'
        });
    google.maps.event.addListener(t, "click", function() {
        o.open(map, t)
    })
}
$map.length && google.maps.event.addDomListener(window, "load", initMap);
var Navbar = function() {
        var a = $(".navbar-nav, .navbar-nav .nav"),
            t = $(".navbar .collapse"),
            e = $(".navbar .dropdown");
        t.on({
            "show.bs.collapse": function() {
                ! function(e) {
                    e.closest(a).find(t).not(e).collapse("hide")
                }($(this))
            }
        }), e.on({
            "hide.bs.dropdown": function() {
                ! function(e) {
                    var a = e.find(".dropdown-menu");
                    a.addClass("close"), setTimeout(function() {
                        a.removeClass("close")
                    }, 200)
                }($(this))
            }
        })
    }(),
    NavbarCollapse = function() {
        $(".navbar-nav");
        var e = $(".navbar .collapse");
        e.length && (e.on({
            "hide.bs.collapse": function() {
                ! function(e) {
                    e.addClass("collapsing-out")
                }(e)
            }
        }), e.on({
            "hidden.bs.collapse": function() {
                ! function(e) {
                    e.removeClass("collapsing-out")
                }(e)
            }
        }))
    }(),
    noUiSlider = function() {
        if ($(".input-slider-container")[0] && $(".input-slider-container").each(function() {
                var e = $(this).find(".input-slider"),
                    a = e.attr("id"),
                    t = e.data("range-value-min"),
                    o = e.data("range-value-max"),
                    n = $(this).find(".range-slider-value"),
                    r = n.attr("id"),
                    l = n.data("range-value-low"),
                    i = document.getElementById(a),
                    s = document.getElementById(r);
                noUiSlider.create(i, {
                    start: [parseInt(l)],
                    connect: [!0, !1],
                    range: {
                        min: [parseInt(t)],
                        max: [parseInt(o)]
                    }
                }), i.noUiSlider.on("update", function(e, a) {
                    s.textContent = e[a]
                })
            }), $("#input-slider-range")[0]) {
            var e = document.getElementById("input-slider-range"),
                a = document.getElementById("input-slider-range-value-low"),
                t = document.getElementById("input-slider-range-value-high"),
                o = [a, t];
            noUiSlider.create(e, {
                start: [parseInt(a.getAttribute("data-range-value-low")), parseInt(t.getAttribute("data-range-value-high"))],
                connect: !0,
                range: {
                    min: parseInt(e.getAttribute("data-range-value-min")),
                    max: parseInt(e.getAttribute("data-range-value-max"))
                }
            }), e.noUiSlider.on("update", function(e, a) {
                o[a].textContent = e[a]
            })
        }
    }(),
    Popover = function() {
        var e = $('[data-toggle="popover"]'),
            t = "";
        e.length && e.each(function() {
            ! function(e) {
                e.data("color") && (t = "popover-" + e.data("color"));
                var a = {
                    trigger: "focus",
                    template: '<div class="popover ' + t + '" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'
                };
                e.popover(a)
            }($(this))
        })
    }(),
    ScrollTo = function() {
        var e = $(".scroll-me, [data-scroll-to], .toc-entry a");
        e.length && e.on("click", function() {
            ! function(e) {
                var a = e.attr("href"),
                    t = e.data("scroll-to-offset") ? e.data("scroll-to-offset") : 0,
                    o = {
                        scrollTop: $(a).offset().top - t
                    };
                $("html, body").stop(!0, !0).animate(o, 600), event.preventDefault()
            }($(this))
        })
    }(),
    Tooltip = function() {
        var e = $('[data-toggle="tooltip"]');
        e.length && e.tooltip()
    }(),
    Charts = function() {
        var e, a = $('[data-toggle="chart"]'),
            t = "light",
            o = {
                base: "Open Sans"
            },
            n = {
                gray: {
                    100: "#f6f9fc",
                    200: "#e9ecef",
                    300: "#dee2e6",
                    400: "#ced4da",
                    500: "#adb5bd",
                    600: "#8898aa",
                    700: "#525f7f",
                    800: "#32325d",
                    900: "#212529"
                },
                theme: {
                    default: "#172b4d",
                    primary: "#5e72e4",
                    secondary: "#f4f5f7",
                    info: "#11cdef",
                    success: "#2dce89",
                    danger: "#f5365c",
                    warning: "#fb6340"
                },
                black: "#12263F",
                white: "#FFFFFF",
                transparent: "transparent"
            };

        function r(e, a) {
            for (var t in a) "object" != typeof a[t] ? e[t] = a[t] : r(e[t], a[t])
        }

        function l(e) {
            var a = e.data("add"),
                t = $(e.data("target")).data("chart");
            e.is(":checked") ? function e(a, t) {
                for (var o in t) Array.isArray(t[o]) ? t[o].forEach(function(e) {
                    a[o].push(e)
                }) : e(a[o], t[o])
            }(t, a) : function e(a, t) {
                for (var o in t) Array.isArray(t[o]) ? t[o].forEach(function() {
                    a[o].pop()
                }) : e(a[o], t[o])
            }(t, a), t.update()
        }

        function i(e) {
            var a = e.data("update"),
                t = $(e.data("target")).data("chart");
            r(t, a),
                function(e, a) {
                    if (void 0 !== e.data("prefix") || void 0 !== e.data("prefix")) {
                        var r = e.data("prefix") ? e.data("prefix") : "",
                            l = e.data("suffix") ? e.data("suffix") : "";
                        a.options.scales.yAxes[0].ticks.callback = function(e) {
                            if (!(e % 10)) return r + e + l
                        }, a.options.tooltips.callbacks.label = function(e, a) {
                            var t = a.datasets[e.datasetIndex].label || "",
                                o = e.yLabel,
                                n = "";
                            return 1 < a.datasets.length && (n += '<span class="popover-body-label mr-auto">' + t + "</span>"), n += '<span class="popover-body-value">' + r + o + l + "</span>"
                        }
                    }
                }(e, t), t.update()
        }
        return window.Chart && r(Chart, (e = {
            defaults: {
                global: {
                    responsive: !0,
                    maintainAspectRatio: !1,
                    defaultColor: n.gray[600],
                    defaultFontColor: n.gray[600],
                    defaultFontFamily: o.base,
                    defaultFontSize: 13,
                    layout: {
                        padding: 0
                    },
                    legend: {
                        display: !1,
                        position: "bottom",
                        labels: {
                            usePointStyle: !0,
                            padding: 16
                        }
                    },
                    elements: {
                        point: {
                            radius: 0,
                            backgroundColor: n.theme.primary
                        },
                        line: {
                            tension: .4,
                            borderWidth: 4,
                            borderColor: n.theme.primary,
                            backgroundColor: n.transparent,
                            borderCapStyle: "rounded"
                        },
                        rectangle: {
                            backgroundColor: n.theme.warning
                        },
                        arc: {
                            backgroundColor: n.theme.primary,
                            borderColor: n.white,
                            borderWidth: 4
                        }
                    },
                    tooltips: {
                        enabled: !1,
                        mode: "index",
                        intersect: !1,
                        custom: function(o) {
                            var e = $("#chart-tooltip");
                            if (e.length || (e = $('<div id="chart-tooltip" class="popover bs-popover-top" role="tooltip"></div>'), $("body").append(e)), 0 !== o.opacity) {
                                if (o.body) {
                                    var a = o.title || [],
                                        n = o.body.map(function(e) {
                                            return e.lines
                                        }),
                                        r = "";
                                    r += '<div class="arrow"></div>', a.forEach(function(e) {
                                        r += '<h3 class="popover-header text-center">' + e + "</h3>"
                                    }), n.forEach(function(e, a) {
                                        o.labelColors[a].backgroundColor;
                                        var t = 1 < n.length ? "justify-content-left" : "justify-content-center";
                                        r += '<div class="popover-body d-flex align-items-center ' + t + '"><span class="badge badge-dot"><i class="bg-primary"></i></span>' + e + "</div>"
                                    }), e.html(r)
                                }
                                var t = $(this._chart.canvas),
                                    l = (t.outerWidth(), t.outerHeight(), t.offset().top),
                                    i = t.offset().left,
                                    s = e.outerWidth(),
                                    d = e.outerHeight(),
                                    c = l + o.caretY - d - 16,
                                    p = i + o.caretX - s / 2;
                                e.css({
                                    top: c + "px",
                                    left: p + "px",
                                    display: "block",
                                    "z-index": "100"
                                })
                            } else e.css("display", "none")
                        },
                        callbacks: {
                            label: function(e, a) {
                                var t = a.datasets[e.datasetIndex].label || "",
                                    o = e.yLabel,
                                    n = "";
                                return 1 < a.datasets.length && (n += '<span class="badge badge-primary mr-auto">' + t + "</span>"), n += '<span class="popover-body-value">' + o + "</span>"
                            }
                        }
                    }
                },
                doughnut: {
                    cutoutPercentage: 83,
                    tooltips: {
                        callbacks: {
                            title: function(e, a) {
                                return a.labels[e[0].index]
                            },
                            label: function(e, a) {
                                var t = "";
                                return t += '<span class="popover-body-value">' + a.datasets[0].data[e.index] + "</span>"
                            }
                        }
                    },
                    legendCallback: function(e) {
                        var o = e.data,
                            n = "";
                        return o.labels.forEach(function(e, a) {
                            var t = o.datasets[0].backgroundColor[a];
                            n += '<span class="chart-legend-item">', n += '<i class="chart-legend-indicator" style="background-color: ' + t + '"></i>', n += e, n += "</span>"
                        }), n
                    }
                }
            }
        }, Chart.scaleService.updateScaleDefaults("linear", {
            gridLines: {
                borderDash: [2],
                borderDashOffset: [2],
                color: n.gray[300],
                drawBorder: !1,
                drawTicks: !1,
                lineWidth: 0,
                zeroLineWidth: 0,
                zeroLineColor: n.gray[300],
                zeroLineBorderDash: [2],
                zeroLineBorderDashOffset: [2]
            },
            ticks: {
                beginAtZero: !0,
                padding: 10,
                callback: function(e) {
                    if (!(e % 10)) return e
                }
            }
        }), Chart.scaleService.updateScaleDefaults("category", {
            gridLines: {
                drawBorder: !1,
                drawOnChartArea: !1,
                drawTicks: !1
            },
            ticks: {
                padding: 20
            },
            maxBarThickness: 10
        }), e)), a.on({
            change: function() {
                var e = $(this);
                e.is("[data-add]") && l(e)
            },
            click: function() {
                var e = $(this);
                e.is("[data-update]") && i(e)
            }
        }), {
            colors: n,
            fonts: o,
            mode: t
        }
    }();
    // OrdersChart = function() {
    //     var e, a, t = $("#chart-orders");
    //     $('[name="ordersSelect"]');
    //     t.length && (e = t, a = new Chart(e, {
    //         type: "bar",
    //         options: {
    //             scales: {
    //                 yAxes: [{
    //                     gridLines: {
    //                         lineWidth: 1,
    //                         color: "#dfe2e6",
    //                         zeroLineColor: "#dfe2e6"
    //                     },
    //                     ticks: {
    //                         callback: function(e) {
    //                             if (!(e % 10)) return e
    //                         }
    //                     }
    //                 }]
    //             },
    //             tooltips: {
    //                 callbacks: {
    //                     label: function(e, a) {
    //                         var t = a.datasets[e.datasetIndex].label || "",
    //                             o = e.yLabel,
    //                             n = "";
    //                         return 1 < a.datasets.length && (n += '<span class="popover-body-label mr-auto">' + t + "</span>"), n += '<span class="popover-body-value">' + o + "</span>"
    //                     }
    //                 }
    //             }
    //         },
    //         data: {
    //             labels: ["Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    //             datasets: [{
    //                 label: "Sales",
    //                 data: [25, 20, 30, 22, 17, 29]
    //             }]
    //         }
    //     }), e.data("chart", a))
    // }(),
    

    // if(window.localStorage.getItem('wasche-services')==undefined || window.localStorage.getItem('wasche-services')==null){
    //     location.href="temp_index.php";
    // }
    window.$oc=null;

var data;;
// console.log(data);
var sload=true;
var month="";
var year=""
var month_list = [];
var year_list = [];
var l_c = 0;
var omsg = $("#orders-msg h3");
var co = $(".chart-order");
var oc1=null,oc2=null;
var smonth,cmonth;
var todetails = {};
var day = ["January","February","March","April","May","June","July","August","September","October","November","December"];
var dat;

var weekday = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];

window.$SalesChart = function(labl,dset) {
    var e, t = $("#chart-sales");
    t.length && (e = t, $a = new Chart(e, {
        type: "line",
        options: {
            scales: {
                yAxes: [{
                    gridLines: {
                        lineWidth: 1,
                        color: Charts.colors.gray[900],
                        zeroLineColor: Charts.colors.gray[900]
                    },
                    ticks: {
                        callback: function(e) {
                            if (!(e % 10)) return "$" + e + "k"
                        }
                    }
                }]
            },
            tooltips: {
                callbacks: {
                    label: function(e, a) {
                        console.log(a.datasets[e.datasetIndex].label);
                        var t = a.datasets[e.datasetIndex].label || "",
                            o = e.yLabel,
                            n = "";
                        return 1 < a.datasets.length && (n += '<span class="popover-body-label mr-auto">' + t + "</span>"), n += '<span class="popover-body-value">$' + o + "k</span>"
                    }
                }
            }
        },
        data: {
            labels: labl,
            datasets: [{
                label: "Success History",
//                 fill: false,
//    borderColor: "#2dce89",
//    backgroundColor: "#2dce89",
//    pointBackgroundColor: "#2dce89",
//    pointBorderColor: "#2dce89",
//    pointHoverBackgroundColor: "#2dce89",
//    pointHoverBorderColor: "#2dce89",
                data: dset[0]
            },
            {
                label: "Failure History",
//                 fill: false,
//    borderColor: "#f5365c",
//    backgroundColor: "#f5365c",
//    pointBackgroundColor: "#f5365c",
//    pointBorderColor: "#f5365c",
//    pointHoverBackgroundColor: "#f5365c",
//    pointHoverBorderColor: "#f5365c",
                data: dset[1]
            }]
        }
    }), e.data("chart", $a))
};
// var progress = document.getElementById('animationProgress');
var orderchart= function (labl,dset,tit,resp,chart_title,id,typel) {
    var e, a, t = $(id);
    
    t.length && (e = t, a = new Chart(e, {
        type: tit,
        options: {
            title:{
                display:true,
                text:(typeof(chart_title)=="number")?day[chart_title-1]:day[parseInt(chart_title)-1],
                fontSize:17
            },
            // legend:{
            //     display:true,
            //     position:'top',
            //     lineDashOffset:1,
            //     lineWidth:1,
            //     strokeStyle:Charts.colors.gray[900],
            //     labels:{
            //         fontColor:"#525f7f",
            //         boxWidth:30,
            //         fontSize:10
            //     }
            // },
            responsive: resp,
            scales: {
                yAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Number Of Clothes'
                      },
                    gridLines: {
                        lineWidth: 1,
                        color: "#dfe2e6",
                        zeroLineColor: "#dfe2e6"
                    },
                    ticks: {
                        callback: function(e) {
                            if ( !(e%1)){return e;  }
                        }
                    }
                }],
                xAxes:[{
                    scaleLabel: {
                        display: true,
                        labelString: 'Day'
                      },
                    ticks:{
                        autoSkip: false,
                        min:0,
                        beginAtZero:true
                    }
                }]
            },
            animation: {
                duration: 1000,
                
                onComplete: function(animation) {
                    window.setTimeout(function() {
                        if(typel == 1){
                        $('.prc1').css({"animation":"exit-load 2s forwards"});
                    $('.prc1').on("animationend",function(){
                        $(".prc1").hide();
                        $('.mcont').show();
                    });
                    $('.prc1').on("webkitAnimationEnd",function(){
                        $(".prc1").hide();                        
                        $('.mcont').show();
                    });    
                    }
                        if(typel == 2){
                            $('.prc2').hide();
                            // $('.prc2').css({"animation-name":"exit-load"});
                            }

                    }, 2000);
                }
            },
            tooltips: {
                callbacks: {
                    label: function(e, a) {
                        console.log("console for order : "+a.datasets[e.datasetIndex].label);
                        var t = a.datasets[e.datasetIndex].label || "",
                            o = e.yLabel,
                            n = "",
                            bgk ="";
                            if(t == "Failure :  "){
                                bgk='style="color:#f5365c"';
                                console.log("F");
                            }
                            else{
                                bgk= 'style="color:#2dce89"';
                                console.log("S");
                            }
                        return 1 < a.datasets.length && (n += '<span class="popover-body-label mr-auto">' + t + "</span>"), n += '<span class="popover-body-value" '+ bgk +'>' + o + "</span>"
                    }
                }
            }
        },
        data: {
            labels: labl,
            datasets:[{
                label: "Success :  ",
                
                fill: false,
   borderColor: "#2dce89",
   backgroundColor: "#2dce89",
   pointBackgroundColor: "#2dce89",
   pointBorderColor: "#2dce89",
   pointHoverBackgroundColor: "#2dce89",
   pointHoverBorderColor: "#2dce89",
                data: dset[0]
            },
            {
                label: "Failure :  ",
                
                fill: false,
   borderColor: "#f5365c",
   backgroundColor: "#f5365c",
   pointBackgroundColor: "#f5365c",
   pointBorderColor: "#f5365c",
   pointHoverBackgroundColor: "#f5365c",
   pointHoverBorderColor: "#f5365c",
                data: dset[1]
            }
        ]
        }
    }), e.data("chart", a))
    console.log("compleeee");
    return a;
}

try {
   data = $('#user-data').data().name
} catch (error) {
    console.error("could not find data");
}


function createmonths(start,end){
    var op="";
    for(var i=(start-1);i<end;i++){
        // if(i==(end-1)){
        //     op = op + "<option selected">
        // }
        op = op + "<option vlaue='" + day[i] + "'>" + day[i] + "</option>";
    }
    return op;
}


function processTotalOrdersData(response,cm,cy,typel){
    console.log(response);
    if(response.s){
        if(response.data==false){
            if(sload==true){
                sload=false;
                $('.prc1').css({"animation":"exit-load 2s forwards"});
            $('.prc1').on("animationend",function(){
                $(".prc1").hide();                
                $('.mcont').show();
            });
            $('.prc1').on("webkitAnimationEnd",function(){
                $(".prc1").hide();
                $('.mcont').show();
            });  
            }
            else{
                setTimeout(function(){
                    $(".prc2").hide();
                    // $(".prc2").css({"animation-name":"exit-load"});

                },3000);
            }
            $(".chart-order").hide();
            $("#orders-msg").find("h3").html("No orders found");
            $("#orders-msg").show();
        }
        else{
            dat = response.data;
            $("#orders-msg").hide();
            $(".chart-order").show();
            if(dat.dates.length>3 && dat.dates.length<=13){
        $("#chart-orders2").show();    
        $("#chart-orders1").hide();    
console.log("1");
            oc1 = orderchart(dat.dates,[dat.success,dat.failed],"line",true,cm,"#chart-orders2",typel);
        }else if(dat.dates.length<=3){
            $("#chart-orders2").show();
            $("#chart-orders1").hide();    
            console.log("2");

            oc1 = orderchart(dat.dates,[dat.success,dat.failed],"bar",true,cm,"#chart-orders2",typel);
            }else{
            $("#chart-orders1").show();
            $("#chart-orders2").hide();    
            console.log("3");

            oc2 = orderchart(dat.dates,[dat.success,dat.failed],"line",false,cm,"#chart-orders1",typel);
            }
            // oc1 = $orderchart(dat.dates,dat.success,dat.failed,e)
            // $('.prc1').css({"animation-name":"exit-load"});
        }
    }else{
        console.log("error finding data");
    }

}

function create_overview_html(wd,date,time_o,nc,c,s,f,category){
    var h = "";
    if(category["start"]){
        h = h + "<tr><th scope='row' class='o-day'>"+wd+"<span class='o-time'>"+date + " - " + time_o +"</span>"+ "</th>";
    
        h = h + "<td><h4 class='text-info'>Processing</h4></td>";
        h = h + "<td><div>";
    for(var i in category){
        if(i!="s" && i!="c" && i!="start" && i!="p" && i!="t" && i!="f"){
         h = h + "<h5>" + i + "  :  <span style='color:#6c6ce4;'>" + category[i] + "</span></h5>";
        }
    }
    h=h+"</div></td>";
    h = h +"<td style='text-align:center;' colspan='4'><img style='width: 40px;' src='/static/pulse.svg'><span style='margin-left:8px;' class='text-info'>Processing...</span></td>";
    
    h = h+"</tr>";
    
    }
    else if(category["p"]){
        h = h + "<tr><th scope='row' class='o-day'>"+wd+"<span class='o-time'>"+date + " - " + time_o +"</span>"+ "</th>";
    
        h = h + "<td><h4 class='text-info'>Processing</h4></td>";
        h = h + "<td><div>";
    for(var i in category){
        if(i!="s" && i!="c" && i!="start" && i!="p" && i!="t" && i!="f"){
         h = h + "<h5>" + i + "  :  <span style='color:#6c6ce4;'>" + category[i] + "</span></h5>";
        }
    }
    h=h+"</div></td>";
    h = h + "<td>"+nc+"</td>";

    h = h +"<td style='text-align:center;' colspan='3'><img style='width: 40px;' src='/static/pulse.svg'><span style='margin-left:8px;' class='text-info'>Processing...</span></td>";
    
    h = h+"</tr>";
    }

    else{
        h = h + "<tr><th scope='row' class='o-day'>"+wd+"<span class='o-time'>"+date + " - " + time_o +"</span>"+ "</th>";
        if(c==1){
            h = h + "<td><i class='ni ni-check-bold text-success' style='font-size:1.3rem;'></i></td>";
            }
            else{
            h = h + "<td><i class='ni ni-check-bold text-warning' style='font-size:1.3rem;'></i></td>";
            }
            h = h + "<td><div>";
        for(var i in category){
            if(i!="start" && i!="p" && i!="s" && i!="c" && i!="t" && i!="f"){
             h = h + "<h5>" + i + "  :  <span style='color:#6c6ce4;'>" + category[i] + "</span></h5>";
            }
        }
        h=h+"</div></td>";
        h = h + "<td>"+nc+"</td>"+"<td>"+s+"</td>";
        h = h + "<td>"+f+"</td>";
        var per = Math.floor(((s+f)/nc)*100 );
        if(per>65){
            h = h + "<td>" + "<div class='d-flex align-items-center'><span class='mr-2'>" + per + "%</span><div><div class='progress'><div class='progress-bar bg-gradient-success' role='progressbar' aria-valuenow='>" + per + "'aria-valuemin='0' aria-valuemax='100' style='width:100%;'></div></div></div></div>" +"</td>";
        }
        else{
            h = h + "<td>" + "<div class='d-flex align-items-center'><span class='mr-2'>" + per + "%</span><div><div class='progress'><div class='progress-bar bg-gradient-danger' role='progressbar' aria-valuenow='>" + per + "'aria-valuemin='0' aria-valuemax='100' style='width:100%;'></div></div></div></div>" +"</td>";
    
        }
        h = h+"</tr>";
        
    }
    console.log(h);
    return h;
    
}
var h_list={};
function process_completion_details(data,year_comp,cm){
    console.log("called process");
    console.log(data);
    $("#date-order").html(day[cm-1]+" - "+year_comp);
 if(data.s){
     if(data.data != false){
         console.log("creating");
     data = data.data;
     var h="";
     if(data.dates.length==0){
        $("#select-range").hide();

         $("#order-overview").html("<tr id='order-comp-msg' style='display:none;'><td><h3 style='width:100%;margin:15px 0;text-align:center;'></h3></td></tr>");
         $("#order-comp-msg h3").html("No orders found during :  " + day[cm - 1] + " - " + year_comp);
         $("#order-comp-msg").show();
     }
     else{
         var hl = []
        $("#order-comp-msg").hide();
        console.log("creating html");
         for(var i=0;i<data.dates.length;i++ ){
            //  console.log(data.dates[i]);
             for(var j in data.order_data[data.dates[i]]){
                //  console.log(j);
                console.log(j);
                var d = String(cm) + "/" + String(data.dates[i]) + "/" + String(year_comp);
                var ddd = new Date(d);
// console.log(ddd);

               h = create_overview_html(weekday[ddd.getDay()],String(data.dates[i]) + "/" + String(cm) + "/" + String(year_comp),j,data.order_data[data.dates[i]][j]["t"],data.order_data[data.dates[i]][j]["c"],data.order_data[data.dates[i]][j]["s"],data.order_data[data.dates[i]][j]["f"],data.order_data[data.dates[i]][j]);
                hl.push(h);
             }
         }
         h_list[String(year_comp)][String(cm)] = hl;
        $("#select-range span").eq(6).html(hl.length);         
         $("#prev-order-list").addClass("full");
         var t=10,f=1,hh="";
         if(h_list[String(year_comp)][String(cm)].length<=10){
        $("#select-range span").eq(3).html(hl.length);
        t=hl.length;
        // $("#order-overview").html(hl);
            $("#next-order-list").addClass("full");
         }else{
        $("#select-range span").eq(3).html(10);
        
         }
        //  hl = h_list[String(year_comp)][String(cm)];
         hl = hl.slice(f-1,t);
         for(var i=0;i<10;i++){
             hh=hh+hl[i];
         }
         $("#order-overview").html(hh); 

         $("#select-range span").eq(1).html("1");
        $("#select-range").show();
            
         
         setTimeout(function(){
             $('.prc3').hide();
         },800);
     }
    }
    else{
        $("#select-range").hide();
        $("#order-overview").html("<tr id='order-comp-msg' style='display:none;'><td><h3 style='width:100%;margin:15px 0;text-align:center;'></h3></td></tr>");

        $("#order-comp-msg h3").html("No orders found during :  " + day[cm - 1] + " - " + year_comp);
         $("#order-comp-msg").show();
    }
 }   
}


function getdata(cy,cm,typel){
    // console.log($("#csrf").serialize()+"&year="+cy+"&month="+cm+"&email="+$("#user-log").data().name.e);
    console.log("type "+typel);
    $.ajax({
        type: "POST",
        url: './ajax/get_data/',
        data: $("#csrf").serialize()+"&year="+cy+"&month="+cm+"&email="+$("#user-log").data().name.e,
        success: function( response ) {
            var response = $.parseJSON(response);
            console.log(response)
            if(typel==1){
                h_list[String(cy)] = {};
                h_list[String(cy)][String(cm)] = [];
            todetails[String(cy)][day[cm-1]].data = response;
            process_completion_details(response,cy,cm);
            
            processTotalOrdersData(response,cm,cy,typel);

            }
            else if(typel==2){
                todetails[String(cy)][day[cm-1]].data = response;
            processTotalOrdersData(response,cm,cy,typel);
            
            }
            else{
                process_completion_details(response,cy,cm);
            }
        },
        error:function (jqXHR, exception) {
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404]';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }
                    console.log(msg);
                // bootbox.alert({
                // 			title:"Error",
                // 			message:msg+" Please Try again later. Thank you.",
                // 			backdrop:true
                //         });
        }
            
    });
}


function initPayment(){
    var data = {};

    // data.appId = "<?php echo $appId; ?>";
    // data.orderId = "<?php echo $orderId; ?>";
    // data.orderAmount = <?php echo $orderAmount; ?>;
    // data.customerName = "<?php echo $customerName; ?>";
    // data.customerPhone = "<?php echo $customerPhone; ?>";
    // data.customerEmail = "<?php echo $customerEmail; ?>";
    // data.notifyUrl = "<?php echo $notifyUrl; ?>";
    // data.orderNote = "<?php echo $orderNote; ?>";
    // data.pc = "<?php echo $pc; ?>";
    // data.orderCurrency = "INR";
    // data.paymentToken = "<?php echo $paymentToken; ?>";
    
    var config = {};
    config.layout = {};
    config.checkout = "transparent";
    config.mode = "<?php echo $mode; ?>";
    var response = CashFree.init(config);

    if (response.status != "OK") {
      // Handle error in initializing 
    }

    var postPaymentCallback = function (event) {
      console.log(event);
      // Callback method that handles Payment 
      if (event.name == "PAYMENT_RESPONSE" && event.status == "SUCCESS") {
        // Handle Success 
      } 
      else if (event.name == "PAYMENT_RESPONSE" && event.status == "CANCELLED") {
        // Handle Cancelled
      } 
      else if (event.name == "PAYMENT_RESPONSE" && event.status == "FAILED") {
        // Handle Failed
      } 
      else if (event.name == "VALIDATION_ERROR") { 
        // Incorrect inputs
      }
    };

    var pc = function () {
        // CashFree.initPopup(); This will not work because browsers block popup requests being initiated from a callback
        data.paymentOption = "card";
        data.card = {};
        data.card.number = document.getElementById("card-num").value; 
        data.card.expiryMonth = document.getElementById("card-mm").value;
        data.card.expiryYear = document.getElementById("card-yyyy").value;
        data.card.holder = document.getElementById("card-name").value;
        data.card.cvv = document.getElementById("card-cvv").value;
        CashFree.paySeamless(data, postPaymentCallback);
        return false;
    }

    // PayCard shows how to implement it if there is a callback involved in your payment click.
    payCard = function() {
      CashFree.initPopup(); // This is required for the popup to work even in case of callback.
        $.ajax({
        url: "https://reqres.in/api/users?page=2", // This is an open endpoint.
        type: "GET",
        success: function(response){
            console.log(response);
            pc();

        }
    });
    };

    payBank = function() {
      CashFree.initPopup();
      data.paymentOption = "nb";
      data.nb = {};
      data.nb.code = document.getElementById("bank-code").value;

      CashFree.paySeamless(data , postPaymentCallback);
      return false;
    };

    payWallet = function() {
      data.paymentOption = "wallet";
      data.wallet = {};
      data.wallet.code = document.getElementById("wallet-code").value;

      CashFree.paySeamless(data, postPaymentCallback);
      return false;
    };

    payUpi = function() {
      data.paymentOption = "upi";
      data.upi = {};
      data.upi.vpa = document.getElementById("upi-vpa").value;

      CashFree.paySeamless(data, postPaymentCallback);
      return false;
    };


}


function initDashboard(){
// print(data)
if(data){
    if(data.m){
        console.log("f m");
        smonth= data.m[0];
        cmonth=data.m[1];
        
    }
    if(data.y){
        console.log("f y");
        year = "";

        for(var i=0;i<data.y.years.length;i++){
            year = year + "<option value='" + data.y.years[i] + "'> " + data.y.years[i] + "</option>";
            year_list.push(data.y.years[i]);
        }
        var dyy =day[cmonth - 1 ];

        todetails[String(year_list[0])] = {};
        todetails[String(year_list[0])][dyy] = { "data" : {} };

        console.log(year);
        $("#year1").html(year);
        $("#year2").html(year);
        
    }


    if(year_list.length==1){
        if(smonth>cmonth){
            var op=createmonths(smonth,12);
            $("#month1").html(op);
            $("#month2").html(op);
         
        }else{

            var op=createmonths(smonth,cmonth);
            $("#month1").html(op);
            $("#month2").html(op);

        }
    }else{
        var op=createmonths(1,cmonth);
        $("#month1").html(op);
        $("#month2").html(op);
        
    }

    getdata(data.y.years[0],cmonth,1);
    
// $("#year1").on("change",function(){
    
// })
$(".filterto").on("click",function(){
    console.log("clicked");
    $(".prc2").show();
    // $(".prc2").css({"animation-name":"enter-load"});
    var y = $("#year1").prop("selectedIndex");
    var m = $("#month1").prop("selectedIndex");
    setTimeout(function(){
        if($("#year1").val() in todetails && $("#month1").val() in todetails[$("#year1").val()] ){
            processTotalOrdersData(todetails[$("#year1").val()][$("#month1").val()].data,m+1,$("#year1").val(),2);
            console.log("found same data");
        
        }
        else if($("#year1").val() in todetails){
            todetails[$("#year1").val()][$("#month1").val()] = {"data":{}};
            console.log("found same year");
            getdata($("#year1").val(),day.indexOf($("#month1").val())+1,2);
        }
        else{
            console.log("Did not found anything");
            todetails[$("#year1").val()] = {};
            todetails[$("#year1").val()][$("#month1").val()] = {"data":{}};
            getdata($("#year1").val(),day.indexOf($("#month1").val())+1,2);
    
        }
        
    },1000);
    $(".open-filterto1").css({"pointer-events":"all"}); 
        $(".filter-cont").toggleClass("close"); 
        setTimeout(function(){ 
            $(".filter-cont").toggleClass("close"); 
            $(".filter-cont").toggleClass("open") 
        },1200);
    
});


$(".open-filterto1").on("click",function(){
    $(".open-filterto1").css({"pointer-events":"none"}); 
    $(".filter-cont").toggleClass("open"); 
});


$("#fclose1").on("click",function(){
    $(".open-filterto1").css({"pointer-events":"all"}); 
    $(".filter-cont").toggleClass("close"); 
    setTimeout(function(){ 
        $(".filter-cont").toggleClass("close"); 
        $(".filter-cont").toggleClass("open") 
    },1200);
});

// $(".filterto").on("click",function(){
//     $(".open-filterto1").css({"pointer-events":"all"}); 
//     $(".filter-cont").toggleClass("close"); 
//     setTimeout(function(){ 
//         $(".filter-cont").toggleClass("close"); 
//         $(".filter-cont").toggleClass("open") 
//     },1200);
// });

$("#year1").on("change",function(){
    $("#loadmonths1").css("display","flex");
    var months="";
    var y = $("#year1").prop("selectedIndex");

    if(y==(year_list.length -1)){
        if(smonth>cmonth){
            months = createmonths(smonth,12);

        }else{
        months = createmonths(smonth,cmonth);

        }
    }else{
        months = createmonths(1,cmonth);
    }
    $("#month1").html(months);
    setTimeout(function(){
    // $("#loadmonths1").hide();
    $("#loadmonths1").css("display","none");


    },1200);
});




$(".filterto2").on("click",function(){
    console.log("clicked");
    $(".prc3").show();
    // $(".prc2").css({"animation-name":"enter-load"});
    var y = $("#year2").prop("selectedIndex");
    var m = $("#month2").prop("selectedIndex");
    var mon=String(day.indexOf(String($("#month2").val())) + 1);
    setTimeout(function(){
        if(String($("#year2").val()) in h_list && mon in h_list[$("#year2").val()] ){
            // processTotalOrdersData(todetails[$("#year1").val()][$("#month1").val()].data,m+1,$("#year1").val(),2);
            console.log("found same data");
            
        
        }
        else{
            if(String($("#year2").val()) in h_list){
                h_list[String($("#year2").val())][mon] = [];
                console.log("found same year");
                getdata($("#year2").val(),mon,3);
            }
            else{
                h_list[String($("#year2").val())] = {};
                console.log("found nothing");

                h_list[String($("#year2").val())][mon] = [];
                getdata($("#year2").val(),mon,3);

            }
        }
        // else if($("#year2").val() in h_list){
        //     // todetails[$("#year1").val()][$("#month1").val()] = {"data":{}};
        //     console.log("found same year");
        //     getdata($("#year2").val(),day.indexOf($("#month1").val())+1,2);
        // }
        // else{
        //     console.log("Did not found anything");
        //     // todetails[$("#year2").val()] = {};
        //     // todetails[$("#year2").val()][$("#month1").val()] = {"data":{}};
        //     getdata($("#year2").val(),day.indexOf($("#month1").val())+1,2);
    
        // }
        
    },1000);
    $(".open-filterto2").css({"pointer-events":"all"}); 
        $(".filter-cont2").toggleClass("close"); 
        setTimeout(function(){ 
            $(".filter-cont2").toggleClass("close"); 
            $(".filter-cont2").toggleClass("open") 
        },1200);
    
});


$(".open-filterto2").on("click",function(){
    $(".open-filterto2").css({"pointer-events":"none"}); 
    $(".filter-cont2").toggleClass("open"); 
});


$("#fclose2").on("click",function(){
    $(".open-filterto2").css({"pointer-events":"all"}); 
    $(".filter-cont2").toggleClass("close"); 
    setTimeout(function(){ 
        $(".filter-cont2").toggleClass("close"); 
        $(".filter-cont2").toggleClass("open") 
    },1200);
});


$("#year2").on("change",function(){
    $("#loadmonths2").css("display","flex");
    var months="";
    var y = $("#year2").prop("selectedIndex");

    if(y==(year_list.length -1)){
        if(smonth>cmonth){
            months = createmonths(smonth,12);

        }else{
        months = createmonths(smonth,cmonth);

        }
    }else{
        months = createmonths(1,cmonth);
    }
    $("#month2").html(months);
    setTimeout(function(){
    // $("#loadmonths1").hide();
    $("#loadmonths2").css("display","none");


    },1200);
});

$("#prev-order-list").on("click",function(){
    if($("#prev-order-list").hasClass("full") == false){
    $(".prc3").show();
    // $("#order-overview").hide();
    var f = $("#select-range span").eq(1).html();
    var t = $("#select-range span").eq(3).html();
    var tot = $("#select-range span").eq(6).html();
    f=parseInt(f);
    t=parseInt(t);
    tot=parseInt(tot);
    f=f-10;
    t=f+9; 
    
    if(f==1){
        $("#prev-order-list").toggleClass("full");
     }
     
     var y=$("#year2").val();
     var m=day.indexOf($("#month2").val())+1;
    var h=h_list[String(y)][String(m)];
    if($("#next-order-list").hasClass("full") == true){
        $("#next-order-list").toggleClass("full");
    }

    
    h = h.slice(f-1,t);

    var hh="";
    for(var i=0;i<h.length;i++){
        hh= hh + h[i];
    }
    $("#order-overview").html(hh);
    $(".prc3").hide();
    
    $("#select-range span").eq(1).html(f);
    $("#select-range span").eq(3).html(t);
    }
});
$("#next-order-list").on("click",function(){
    if($("#next-order-list").hasClass("full") == false){
    $(".prc3").show();
    // $("#order-overview").hide();
    var f = $("#select-range span").eq(1).html();
    var t = $("#select-range span").eq(3).html();
    var tot = $("#select-range span").eq(6).html();
    f=parseInt(f);
    t=parseInt(t);
    tot=parseInt(tot);
     
    if(f==1){
        $("#prev-order-list").toggleClass("full");
     }
     f=f+10;
     t=t+10;
     var y=$("#year2").val();
     var m=day.indexOf($("#month2").val())+1;
    var h=h_list[String(y)][String(m)];
    
    if(t>=h.length){
        t=h.length;
    }
    if(t==h.length){
        $("#next-order-list").toggleClass("full");

    }
    h = h.slice(f,t);
    var hh="";
    for(var i=0;i<h.length;i++){
        hh= hh + h[i];
    }
    $("#order-overview").html(hh);
    $(".prc3").hide();
    $("#select-range span").eq(1).html(f);
    $("#select-range span").eq(3).html(t);
    }
});

}
}




        // function tryParseJSON(str) {
        //     try {
        //         var Obj = JSON.parse(str);
        //         if (Obj && typeof Obj === "object") {
        //             return Obj;
        //         }
        //     } catch (e) {}
        //     return false;
        // }
        var OneSignal = OneSignal || [];
        function getSubscriptionState() {
            return Promise.all([
              OneSignal.isPushNotificationsEnabled(),
              OneSignal.isOptedOut()
            ]).then(function(result) {
                var isPushEnabled = result[0];
                var isOptedOut = result[1];
    
                return {
                    isPushEnabled: isPushEnabled,
                    isOptedOut: isOptedOut
                };
            });
        }
        // window.$rr=true;
        var rr=true;

        var ini_lo=true,fc=1,is_clicked=false;
        var starting_date="";
        var noti_data=[];
        var dayyyy = ["Jan","Feb","March","April","May","June","July","Aug","Sept","Oct","Nov","Dec"];
        function format_date(d){
            d = d.split(" ");
            var dd = d[0].split("-");
            dd[1] = dayyyy[parseInt(dd[1]) - 1];
            var dddd = "";
            // dd.map(function(e){
            //     dddd = dddd + e + "-";
            // });
            for(var i =0;i<dd.length;i++){
                dddd = dddd + dd[i];
                if(i<(dd.length - 1)){
                    dddd = dddd + "-";
                }
            }            
            dddd = dddd + " ";

            for(var i =0;i<d.length;i++){
                if(i!=0){
                    dddd = dddd + d[i] +" ";
                }
            }
            return dddd;
        }
        var prev_d_l=0;
        function add_noti(){
            console.log("called getnoti");
            var nee=true;
            var noti="";
            if(prev_d_l==0 && noti_data.length==0){
                console.log("yes no noti");
                
                setTimeout(function(){
                    $(".cont-mnoti").html("<h3 style='padding:0 16px;text-align:center;'>No notifications as of now.</h3><div class='dropdown-divider'></div>");
           
                },2500);
                console.log("no neww msgs");
                // $(".prc5").html("No notifications to show");
            
            }
            if(prev_d_l!=noti_data.length){
            var res = noti_data.slice(0,3);
            prev_d_l = noti_data.length;
            for(var i=0;i<res.length;i++){
                if(i==0){
                    starting_date = res[i].date;
                    console.log("changing  :  "+starting_date);
                }
                if(nee){
                    if(res[i].seen==false){
                        $(".pulse").show();
                        $(".marker").show();
                        nee=false;
                    }
                }
                if(res[i].seen==false){
                    noti = noti + create_notification(res[i].id,res[i].type," not-seen-msg",res[i].from,format_date(res[i].date),res[i].title,res[i].msg,(res[i].img_url=="No")?"/static/te-no.svg":res[i].img_url);

                }
                else{
                noti = noti + create_notification(res[i].id,res[i].type,"",res[i].from,format_date(res[i].date),res[i].title,res[i].msg,(res[i].img_url=="No")?"/static/te-no.svg":res[i].img_url);

                }
            }
            console.log(noti);
            if(noti==""){
                setTimeout(function(){
                    $(".cont-mnoti").html("<h3 style='padding:0 16px;text-align:center;'>No notifications as of now.</h3><div class='dropdown-divider'></div>");
           
                },2500);
                console.log("no neww msgs");
                // $(".prc5").html("No notifications to show");
            }
            else{
                $(".cont-mnoti").html(noti);
            }
        }
            // console.log("found : "+noti);
        }
        var pre_all_noti_l=0,start_all_d="";
        function add_all_noti(){
            var noti2="";
            // if(prev_d_l!=noti_data.length){
            var res = noti_data.slice(pre_all_noti_l,);
            pre_all_noti_l = noti_data.length;
            for(var i=0;i<res.length;i++){
                // if(start_all_d==""){
                //     start_all_d = res[i].date;
                // }
                if(res[i].seen==false){
                    noti2 = noti2 + create_all_view_notification(res[i].id,res[i].type," not-seen-msg",res[i].from,format_date(res[i].date),res[i].title,res[i].msg,(res[i].img_url=="No")?"/static/te-no.svg":res[i].img_url);

                }else{
                noti2 = noti2 + create_all_view_notification(res[i].id,res[i].type,"",res[i].from,format_date(res[i].date),res[i].title,res[i].msg,(res[i].img_url=="No")?"/static/te-no.svg":res[i].img_url);

                }
            }
            console.log("All notifications : "+noti2);
            if(noti2==""){
                $("#h4-load-more-noti").hide();

                $(".all-noti-cont-msg").html("<h3 id='err-msg-all-noti' style='padding:0 16px;text-align:center;'>No notifications as of now.</h3><div class='dropdown-divider'></div>");
            }
            else{
                if(no_noti){
                    $("#h4-load-more-noti").show();

                }
                $(".all-noti-cont-msg #err-msg-all-noti").remove();

                $(".all-noti-cont-msg").append(noti2);
            }
        // }
            // console.log("found : "+noti);
        }
        function add_all_new_noti(nl){
            var noti2="";
            // if(prev_d_l!=noti_data.length){
            var res = noti_data.slice(0,nl);
            pre_all_noti_l = noti_data.length;
            for(var i=0;i<res.length;i++){
                if(res[i].seen==false){
                    noti2 = noti2 + create_all_view_notification(res[i].id,res[i].type," not-seen-msg",res[i].from,format_date(res[i].date),res[i].title,res[i].msg,(res[i].img_url=="No")?"/static/te-no.svg":res[i].img_url);

                }else{
                noti2 = noti2 + create_all_view_notification(res[i].id,res[i].type,"",res[i].from,format_date(res[i].date),res[i].title,res[i].msg,(res[i].img_url=="No")?"/static/te-no.svg":res[i].img_url);

                }
            }
            // if(noti2==""){
            //     $(".all-noti-cont-msg").html("<h3 style='padding:0 16px;text-align:center;'>No notifications as of now.</h3><div class='dropdown-divider'></div>");
            // }
            if(noti2!=""){
                $(".all-noti-cont-msg #err-msg-all-noti").remove();
                $(".all-noti-cont-msg").prepend(noti2);
                if(no_noti==true){
                    $("#h4-load-more-noti").show();

                }
            }
        // }
            // console.log("found : "+noti);
        }
var no_noti=false,loaded=false;
        function get_notifications(f,n){
            $.ajax({
                type: "POST",
                url: '/ajax/get_notification/',
                data: $("#csrf").serialize()+"&n="+n+"&f="+f,
                success: function( response ) {
                    console.log("got noti : "+response);
                    // $(".cont-mnoti").
                    // $(".prc5").hide();
                    
                    response = $.parseJSON(response);
                    if(response.data.length<10){
                        // if(noti_data.length<10){
                        $(".prcnoti").hide();
                        no_noti=true;
                        // }
                    }
                    // else{
                        for(var i=0;i<response.data.length;i++ ){
                            if(starting_date==""){
                                starting_date = response.data[i].date;
                            }
                            noti_data.push(response.data[i]);
                            
                        }
                        add_noti();
                        add_all_noti();
                    // }
                    loaded=true;
                    
               },
                error:function (jqXHR, exception) {
                            var msg = '';
                            if (jqXHR.status === 0) {
                                msg = 'Not connect.\n Verify Network.';
                            } else if (jqXHR.status == 404) {
                                msg = 'Requested page not found. [404]';
                            } else if (jqXHR.status == 500) {
                                msg = 'Internal Server Error [500].';
                            } else if (exception === 'parsererror') {
                                msg = 'Requested JSON parse failed.';
                            } else if (exception === 'timeout') {
                                msg = 'Time out error.';
                            } else if (exception === 'abort') {
                                msg = 'Ajax request aborted.';
                            } else {
                                msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }
                            console.log(msg);
                        
                }
                    
            });
        }
        function get_new_notifications(d_c){
            $.ajax({
                type: "POST",
                url: '/ajax/get_new_notification/',
                data: $("#csrf").serialize()+"&date="+d_c,
                success: function( response ) {
                    console.log("got new noti : "+response);
                    // $(".cont-mnoti").
                    response = $.parseJSON(response);
                    for(var i=0;i<response.data.length;i++ ){
                        if(starting_date==""){
                            starting_date = response.data[i].date;
                        }
                        noti_data.splice(0,0,response.data[i]);
                        
                    }
                    add_noti();
                    if(response.data.length!=0){
                        add_all_new_noti(response.data.length);
                    }
                    setTimeout(function(){
                        get_new_notifications(starting_date);
                    },60000);
               },
                error:function (jqXHR, exception) {
                            var msg = '';
                            if (jqXHR.status === 0) {
                                msg = 'Not connect.\n Verify Network.';
                            } else if (jqXHR.status == 404) {
                                msg = 'Requested page not found. [404]';
                            } else if (jqXHR.status == 500) {
                                msg = 'Internal Server Error [500].';
                            } else if (exception === 'parsererror') {
                                msg = 'Requested JSON parse failed.';
                            } else if (exception === 'timeout') {
                                msg = 'Time out error.';
                            } else if (exception === 'abort') {
                                msg = 'Ajax request aborted.';
                            } else {
                                msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }
                            console.log(msg);
                        
                }
                    
            });
        }

        function update_notification_setting(typ,pid,age){
var dat = {};
dat["type"] = typ;
dat["pid"] = pid;
dat["agent-type"]=encodeURIComponent(age);
dat = JSON.stringify(dat);
            $.ajax({
            type: "POST",
            url: '/update_notification/',
            data: $("#csrf").serialize()+"&data="+dat,
            success: function( response ) {
                console.log(pid+"   "+typ+"   "+age);
                console.log("got type : "+typ+"  "+response);
				/* if(typ==0){
					var res = $.parseJSON(response);
					if(res["no"]==true){
						OneSignal.setSubscription(true);
						console.log("changed typ");
						$(".ic-Super-toggle__input").prop("checked",true);
					}
				} */
            },
            error:function (jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        console.log(msg);
                    
            }
                
        });
        }


        function onManageWebPushSubscriptionButtonClicked() {
           
            getSubscriptionState().then(function(state) {
                if (state.isPushEnabled) {
                    /* Subscribed, opt them out */
                    // update_notification_setting(0,"");
                    OneSignal.getUserId( function(userId) {
                        console.log("enabled  :   "+userId);
                        update_notification_setting(0,userId,navigator.userAgent);
                    });
                    console.log("enabled");
                            $(".notification-alert-msg").addClass("noti-msg-success");
                            $(".notification-alert-msg").html("Success!");
                                    
                            $(".notification-alert-msg").toggleClass("noti-msg-show");
                            setTimeout(function(){
                                $(".notification-alert-msg").toggleClass("noti-msg-show");
                                $('.ic-Super-toggle__input').prop("disabled",false);
                                $('.prc4').hide();
                    $(".ic-Super-toggle__input").prop("checked",false);
                                    
                                    $('.ic-Super-toggle--on-off').css("transform","translateX(6.5rem)");
                              
                            },3500);
                    OneSignal.setSubscription(false);
                } else {
                    if (state.isOptedOut) {
                        // update_notification_setting(0,"");
                        
                        var perm=Notification.permission;
                        if(perm!="default"){

                        }
                        OneSignal.getUserId( function(userId) {
                            console.log("optiong  :   "+userId);
                            update_notification_setting(0,userId,navigator.userAgent);
                        });
                    console.log("opted out");
                    $(".ic-Super-toggle__input").prop("checked",true);
                        
                            $(".notification-alert-msg").addClass("noti-msg-success");
                            $(".notification-alert-msg").html("Success!");
                                    
                            $(".notification-alert-msg").toggleClass("noti-msg-show");
                            setTimeout(function(){
                                $(".notification-alert-msg").toggleClass("noti-msg-show");
                                $('.ic-Super-toggle__input').prop("disabled",false);
                                $('.prc4').hide();
                                    
                                    $('.ic-Super-toggle--on-off').css("transform","translateX(6.5rem)");
                              
                            },3500);
                        /* Opted out, opt them back in */
                        OneSignal.setSubscription(true);
                    } else {
                        
                        rr=false;
                        var perm="";
                        OneSignal.registerForPushNotifications().then(function(){
                            perm=Notification.permission;
                            console.log(perm);
                            if(perm=="granted"){
                                $(".notification-alert-msg").addClass("noti-msg-success");
                                $(".notification-alert-msg").html("Success!");
                                $(".ic-Super-toggle__input").prop("checked",true);
                                OneSignal.getUserId( function(userId) {
                                    console.log("subscribing :   "+userId);
                                    update_notification_setting(2,userId,navigator.userAgent);
                                });
                            }
                            else{
                                $(".notification-alert-msg").addClass("noti-msg-danger");
                                $(".notification-alert-msg").html("You have declined the notification permission.");
                                $(".ic-Super-toggle__input").prop("checked",false);
                            }
                            $(".notification-alert-msg").toggleClass("noti-msg-show");
                            setTimeout(function(){
                                $(".notification-alert-msg").toggleClass("noti-msg-show");
                                $('.ic-Super-toggle__input').prop("disabled",false);
                                $('.prc4').hide();
                                    
                                    $('.ic-Super-toggle--on-off').css("transform","translateX(6.5rem)");
                              
                            },3500);
                            
                    
                        });

                        // $rr=false;
                       /* Unsubscribed, subscribe them */
                    }
                }
            });
            return rr;
        }
    
        function create_notification(id,typp,msg_class,tit,tim,headi,tex,img_src){
            return "<div class='mnoti mnoti-small'><div style='display:none;' class='details-noti-msg'><input type='hidden' name='id' class='noti-msg-id' value='" + id + "'><input type='hidden' name='type' class='noti-msg-type' value='" + typp + "'></div><div class='mnoti-cont" + msg_class + "'><img src='"+ img_src +"'><div><div><p class='mnoti-title mnoti-from'>" + tit + "</p><h6 class='mnoti-time'>" + tim + "</h6><p class='mnoti-title mnoti-heading'>" + headi + "</p></div><p class='mnoti-text'>" + tex + "</p></div></div></div><div class='dropdown-divider'></div>";
        }

        function create_all_view_notification(id,typp,msg_class,tit,tim,headi,tex,img_src){
            return "<div class='mnoti mnoti-click add-noti-shadow'> <div style='display:none;' class='details-noti-msg'><input type='hidden' name='id' class='noti-msg-id' value='" + id + "'><input type='hidden' name='type' class='noti-msg-type' value='" + typp + "'></div><div class='full-msg-div'><div class='full-msg-div-header'><div class='full-msg-div-header-details'><img src='" + img_src + "'><div><h3 class='f-msg-title'>" + tit + "</h3><h5>" + tim + "</h5></div></div><i class='ni ni-fat-remove remove-full-msg'></i></div><div><h3>" + headi + "</h3><p>" + tex + "</p></p></div></div><div class='mnoti-cont" + msg_class + "'><img src='"+ img_src +"'><div><div><p class='mnoti-title mnoti-from'>" + tit + "</p><h6 class='mnoti-time'>" + tim + "</h6><p class='mnoti-title mnoti-heading'>" + headi + "</p></div><p class='mnoti-text'>" + tex + "</p></div></div></div><div class='dropdown-divider'></div>";
        }

        
            
            get_notifications(fc,3);
            var noti_Socket;
                function create_error_msg(txt,btn_txt,abtn){
                    var tx= "<div style='position:absolute;right:0;top:0;' id='err-msg-close'><i class='ni ni-fat-remove' style='font-size:25px;cursor:pointer;'></i></div><div style='margin-top:12px;'>"+txt+"</div>";
                    if(btn_txt!=""){
                        tx = tx+ "<div style='display:block;cursor:pointer;' id='err-msg-btn'><h3 style='user-select:none;border-radius:2px;margin:8px 0;border:1px solid rgba(255,255,255,0.65);padding:5px;box-shadow:0px 6px 10px rgba(0,0,0,0.3);'>"+btn_txt+"</h3></div>";
                   
                    }
                    if(abtn==1){
                        tx = tx+ "<div style='display:block;cursor:pointer;' id='try-again-btn'><h3 style='user-select:none;border-radius:2px;margin:8px 0;border:1px solid rgba(255,255,255,0.65);padding:5px;box-shadow:0px 6px 10px rgba(0,0,0,0.3);'>Try again</h3></div>";

                    }
                    return tx+"</div>";
                }

        $(document).ready(function(){

            // if($("#pdataNotify").val()=="True"){
            //     $(".notification-alert-msg").removeClass("noti-msg-danger");
            //         $(".notification-alert-msg").removeClass("noti-msg-success");

            //         $(".notification-alert-msg").addClass("noti-msg-success");
            //         $(".notification-alert-msg").html("Your plan is renewed.");
                            
            //         $(".notification-alert-msg").toggleClass("noti-msg-show");
                    
            // }
            // var o_first=true,no_noti=false;
            var pp='',isen=false,tried_soc_con=0,is_connected=false;
//   var socket = io.connect('http://' + document.domain + ':' + document.location.port);
$("#div__payment .close-payment-div").on("click",function(){
    $("#div__payment").toggleClass("payment__show");

    // var pele=$("#div__payment form");
    // for(var i=0;i<pele.lenght;i++){
    //     if(pele[i].attr("class") == $(this).attr("class"))
    // }
});
$(".billing-form-input").on("submit",function(event){
    event.preventDefault();
    $(this).find("button").eq(0).attr("disabled",true);
    $(this).find("button i").eq(0).show();

    $("#payment_form_amount").val($(this).find(".planAmount").html());
    $("#payment_form_plan").val($(this).find(".planName").html());
    $("#payment-div form").submit();
});
$("#renew-subscription").on("click",function(){
    // $(this).toggleClass("clickable");
    $("#div__payment").toggleClass("payment__show");
    // $.ajax({
    //     type: "POST",
    //     url: '/b/start/',
    //     data: $("#csrf").serialize() + "&amount=780&country=India",
    //     success: function( response ) {
    //         // var response = $.parseJSON(response);
    //         console.log(response);
   

    //     },
    //     error:function (jqXHR, exception) {
    //                 var msg = '';
    //                 if (jqXHR.status === 0) {
    //                     msg = 'Not connect.\n Verify Network.';
    //                 } else if (jqXHR.status == 404) {
    //                     msg = 'Requested page not found. [404]';
    //                 } else if (jqXHR.status == 500) {
    //                     msg = 'Internal Server Error [500].';
    //                 } else if (exception === 'parsererror') {
    //                     msg = 'Requested JSON parse failed.';
    //                 } else if (exception === 'timeout') {
    //                     msg = 'Time out error.';
    //                 } else if (exception === 'abort') {
    //                     msg = 'Ajax request aborted.';
    //                 } else {
    //                     msg = 'Uncaught Error.\n' + jqXHR.responseText;
    //                 }
    //                 console.log(msg);
    //             // bootbox.alert({
    //             // 			title:"Error",
    //             // 			message:msg+" Please Try again later. Thank you.",
    //             // 			backdrop:true
    //             //         });
    //     }
            
    // });


});



(function($) {
    $.fn.hasScrollBar = function() {
        return this.get(0).scrollHeight > this.get(0).clientHeight;
    }
})(jQuery);

$(".all-noti-cont-msg").on("click",".remove-full-msg",function(e){
    $(".all-noti-cont-msg .full-msg-div").find(".enter").toggleClass("exit");
    $(".all-noti-cont-msg .full-msg-div").removeClass("enter");
    $(".all-noti-cont-msg .mnoti").toggleClass("mnoti-click");

});
$(".all-noti-cont-msg").on("click",".mnoti-click",function(e){
    $(".all-noti-cont-msg .full-msg-div").removeClass("exit");
    $(".all-noti-cont-msg .full-msg-div").removeClass("enter");
    $(this).find(".full-msg-div").addClass("enter");
    $(".all-noti-cont-msg .mnoti").toggleClass("mnoti-click");
    $(this).find(".mnoti-cont").removeClass("not-seen-msg");
    console.log("clicked");
    noti_data = noti_data.map(function(i){ if(i.seen==false && i.id==parseInt($(this).find(".noti-msg-id").val())){i.seen=true;}return i;
            });
    $.ajax({
            type: "POST",
            url: '/ajax/update_user_notification_set/',
            data: $("#csrf").serialize() + "&id=" + $(this).find(".noti-msg-id").val(),
            success: function( response ) {
                // var response = $.parseJSON(response);
                console.log(response);
       

            },
            error:function (jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        console.log(msg);
                    // bootbox.alert({
                    // 			title:"Error",
                    // 			message:msg+" Please Try again later. Thank you.",
                    // 			backdrop:true
                    //         });
            }
                
        });
});
$(".view-all-notif").on("click",function(e){
    $(".notification-all-cont").removeClass("enter");

    $(".notification-all-cont").removeClass("exit");
    
    $(".notification-all-cont").addClass("enter");
    console.log("entering");
    // if(o_first){
    //     o_first=false;
    //     if(noti_data.length<10 && no_noti){
    //         $("#h4-load-more-noti").show();
    //     $(".prcnoti").hide();
    //     // no_noti=true;
    //     // }
    //     // else{
    //     //     if($(".cont-all-noti").hasScrollBar()){
    //     // no_noti=true;
                
    //     //         $("#h4-load-more-noti").show();
    //     // $(".prcnoti").hide();
    //     //     }
    //     }
    //     if(noti_data.length<10 && no_noti){
    //         $("#h4-load-more-noti").show();
    //     $(".prcnoti").hide();
    //     // no_noti=true;
    //     // }
    //     // else{
    //     //     if($(".cont-all-noti").hasScrollBar()){
    //     // no_noti=true;
                
    //     //         $("#h4-load-more-noti").show();
    //     // $(".prcnoti").hide();
    //     //     }
    //     }
    // }
});



$("#remove-view-all-notif").on("click",function(e){
    $(".notification-all-cont").removeClass("enter");

    $(".notification-all-cont").removeClass("exit");
    $(".notification-all-cont").addClass("exit");
    if($(".full-msg-div.enter").length!=0){
        $(".all-noti-cont-msg .mnoti").toggleClass("mnoti-click");
    }

    console.log("exiting");
    $(".all-noti-cont-msg .full-msg-div").removeClass("enter");
    
});

var element = document.getElementsByClassName("cont-all-noti")[0];
$(".cont-all-noti").on("scroll",function(){
    if (element.offsetHeight + element.scrollTop >= (element.scrollHeight - 25)) {
        console.log("getting-new-noti");
        if(no_noti==false && loaded==true){
            loaded=false;
        get_notifications(pre_all_noti_l,10);
        }
      }
    // if(($(".cont-all-noti").scrollTop() + $(".all-noti-cont-msg").innerHeight()) >= (document.getElementsByClassName("cont-all-noti")[0].scrollHeight - 3)){
    //     console.log("getting-new-noti");
    //     if(no_noti==false){
    //     get_notifications(pre_all_noti_l,10);
    //     }
    // }
})


$(document).on("click",".mnoti-small",function(e){
    $(this).removeClass("not-seen-msg");
    $(".notification-all-cont").removeClass("enter");

    $(".notification-all-cont").removeClass("exit");
    
    $(".notification-all-cont").addClass("enter");
    console.log("entering");
    var id = parseInt($(this).find(".noti-msg-id").val());
    for(var i=0;i<noti_data.length;i++){
        if(id == parseInt(noti_data[i].id)){

            $(".all-noti-cont-msg .mnoti").eq(i).trigger("click");
            if(i==(noti_data.length - 1)){
                $(".cont-all-noti").scrollTop($(".cont-all-noti").height());
            }
            break;
        }
    }
    // $(".mnoti-small .full-msg-div").removeClass("enter");
    // $(this).find(".full-msg-div").removeClass("exit");
    // $(this).find(".full-msg-div").removeClass("enter");
    // $(this).find(".full-msg-div").addClass("enter");
});
// $(document).on("click",".mnoti-small .remove-full-msg",function(e){
//     $(".mnoti-small").find(".enter").toggleClass("exit");
//     $(".mnoti-small").find(".full-msg-div").removeClass("enter");
//     // $(".mnoti-small").find(".full-msg-div").addClass("enter");
// });

function create_socket(){
            setTimeout(function(){
                console.log("connecting");
                noti_Socket = new WebSocket(
                    'ws://' + window.location.host +
                    '/ws/' + "notifications" + '/');
                noti_Socket.onopen = function(e){
                    console.log("connected");
                    $(".notification-alert-msg").removeClass("noti-msg-danger");
                    $(".notification-alert-msg").removeClass("noti-msg-success");

                    $(".notification-alert-msg").addClass("noti-msg-success");
                    $(".notification-alert-msg").html("Connected to notification servers.");
                            
                    $(".notification-alert-msg").toggleClass("noti-msg-show");
                    setTimeout(function(){
                        $(".notification-alert-msg").toggleClass("noti-msg-show");
                    },3500);
                    is_connected=true;
            
                }
                noti_Socket.onclose = function(e) {
                    console.log(e);
                    if(tried_soc_con<=3 && is_connected==false){
                        console.log("trying : "+tried_soc_con);
                    setTimeout(function(){
                        create_socket();
                    },2000);
                        // create_socket();
                    tried_soc_con++;
                }else{
                    
                    $(".notification-alert-msg").removeClass("noti-msg-danger");
                    $(".notification-alert-msg").removeClass("noti-msg-success");
                    if(is_connected==true){
                        $(".notification-alert-msg").html(create_error_msg("An connection error occured.","Reload",1));
                    }
                    else{
                        $(".notification-alert-msg").html(create_error_msg("There is a problem connecting to our notification services. Please reload the page.","Reload",1));

                    }
                    is_connected=false;
                    $(".notification-alert-msg").addClass("noti-msg-danger");
                                    
                            $(".notification-alert-msg").toggleClass("noti-msg-show");
                            // setTimeout(function(){
                            //     $(".notification-alert-msg").toggleClass("noti-msg-show");
                            $('#err-msg-close').on("click",function(){
                                $(".notification-alert-msg").toggleClass("noti-msg-show");
                                get_new_notifications(starting_date);
console.log("Cancelled async");
                            });
                            $('#try-again-btn').on("click",function(){
                                $(".notification-alert-msg").toggleClass("noti-msg-show");
                                // get_new_notifications(starting_date);
                                is_connected=false;
                                tried_soc_con=0;
                                // if(tried_soc_con<=3 && is_connected==false){
                                    console.log("trying : "+tried_soc_con);
                                // setTimeout(function(){
                                    create_socket();
                                // },1000);
                            });
                            $('#err-msg-btn').on("click",function(){
                                $(".notification-alert-msg").toggleClass("noti-msg-show");
                                
                                location.reload();
                            });
                            // },6000);
                }
                    console.error('Notification socket closed unexpectedly');
                };
                noti_Socket.onmessage = function(e) {
                    // var data = JSON.parse(e.data);
                    // console.log(e.data);
                    // window.$rr = e.data;
                    var response = $.parseJSON(e.data);
                    response = response["data"];
                    var ct=$("#user-log").data().name;
                    if(ct!="no"){
                        if(response.to==ct["e"]){
                            if(response.type=="notify"){
                                console.log("notifying");
                                for(var i=0;i<response.data.length;i++ ){
                                    if(starting_date==""){
                                        starting_date = response.data[i].date;
                                    }
                                    noti_data.splice(0,0,response.data[i]);
                                    
                                }
                                add_noti();
                                if(response.data.length!=0){
                                    add_all_new_noti(response.data.length);
                                }
                            }
                        }
                    }
                    console.log(response);
                    // window.$sr = response;

                    // response = e.data;
                    // response = response["me"]
                    
                    // var message = data['message'];
                    // console.log("recieved message : " + response);
    
                };
                
            },5000);
        }

        create_socket();
        $('#err-msg-close').on("click",function(){
            $(".notification-alert-msg").toggleClass("noti-msg-show");

        });
        $('#err-msg-btn').on("click",function(){
            location.reload();
        });
            // get_notifications(fc,3);
            try {
                pp = $('#user-log').data().name;
                for(var i=0;i<pp.pid.length;i++){
                    if(pp.pid[i] == navigator.userAgent){
                        isen = true;
                    }
                }
                if(isen){
                    $(".ic-Super-toggle__input").prop("checked",true);
                    console.log("set t");
					
					OneSignal.setSubscription(true);
                }
                else{
                    console.log("set f");

					OneSignal.setSubscription(false);
                    $(".ic-Super-toggle__input").prop("checked",false);
                }
             } catch (error) {
                 console.error("could not find data");
             }


            OneSignal.push(function() {
                // If we're on an unsupported browser, do nothing
                if (!OneSignal.isPushNotificationsSupported()) {
                    return;
                }
                OneSignal.on("subscriptionChange", function(isSubscribed) {console.log(isSubscribed);if (isSubscribed) {
              // The user is subscribed
              //   Either the user subscribed for the first time
              //   Or the user was subscribed -> unsubscribed -> subscribed
              OneSignal.getUserId( function(userId) {
                  console.log(userId);

                // Make a POST call to your server with the user ID
              });
            }
                });
            });

            
            if(OneSignal==[]){
                $(".popup-noti-h4").html("PopUp Notifications [&nbsp;<span style='color:#f75676;'>Not Supported</span>&nbsp;]");
                $(".ic-Super-toggle__input").hide();
            }
            if(OneSignal.isPushNotificationsSupported()==false){
                $(".popup-noti-h4").html("PopUp Notifications [&nbsp;<span style='color:#f75676;'>Not Supported</span>&nbsp;]");
                $(".ic-Super-toggle__input").hide();
                 }
			
            if(OneSignal.isPushNotificationsSupported()==true){
                console.log("changing noti");
               var perm = Notification.permission;
                if(perm=="default" && isen){
                    console.log("Perm : 1");
                    $(".ic-Super-toggle__input").prop("checked",false);
                    
                    OneSignal.getUserId( function(userId) {
                        update_notification_setting(0,userId,navigator.userAgent);

                    });
                }
                else if(perm=="default"){
                    console.log("Perm : 2");

                    $(".ic-Super-toggle__input").prop("checked",false);
                    OneSignal.getUserId( function(userId) {
                    update_notification_setting(3,userId,navigator.userAgent);
                        
                    });

                }
                else if(perm=="granted"){
                    //$(".ic-Super-toggle__input").prop("checked",true);
                    console.log("Perm : 3");
                    
                    OneSignal.getUserId( function(userId) {
setTimeout(function(){
                        getSubscriptionState().then(function(state) {
                            if (state.isPushEnabled) {
console.log("Push  :  ",isen);
                                $(".ic-Super-toggle__input").prop("checked",true);
                        update_notification_setting(2,userId,navigator.userAgent);
                            
                            } else {
                                if (state.isOptedOut) {
console.log("Opted  :  ",isen);
									if(isen==false){
                                $(".ic-Super-toggle__input").prop("checked",false);
									}
                                }
                            }
                        });
},5000);
                        
                        });

                }else if(perm=="denied"){
                    $(".ic-Super-toggle__input").prop("checked",false);
                    console.log("4");
                    setTimeout(function(){
                        OneSignal.setSubscription(false);
    
                    },5000);
                    OneSignal.getUserId( function(userId) {
                        update_notification_setting(3,userId,navigator.userAgent);

                            });

                }
				
            // setTimeout(function(){
                /* sole.log("Changing  noti setting");
                getSubscriptionState().then(function(state) {
                    if (state.isPushEnabled) {
                        $(".ic-Super-toggle__input").prop("checked",true);
                    
                    } else {
                        if (state.isOptedOut) {
                        $(".ic-Super-toggle__input").prop("checked",false);

                        }
                    }
                }); 
				*/
				/* OneSignal.getUserId( function(userId) {
                $.ajax({
        url: "/check_noti_setting/", // This is an open endpoint.
        type: "GET",
		data: "os="+navigator.userAgent+"&pid="+userId,
        success: function(response){
            console.log("Noti Response :  "+response);
            response = $.parseJSON(response);
            if(response["s"]==false){
                setTimeout(function(){
                    OneSignal.setSubscription(false);
                    $(".ic-Super-toggle__input").prop("checked",false);

                },5000);

            }
            if(response["s"]==true){
                if(response["en"]==true){
                $(".ic-Super-toggle__input").prop("checked",true);
getSubscriptionState().then(function(state) {
    
        if (state.isOptedOut) {
        OneSignal.setSubscription(true);

        }
    
});
                }
                else{
                $(".ic-Super-toggle__input").prop("checked",false);
OneSignal.setSubscription(false);
                }
            }
            
        }
				});
				   
                    });
					 */
					 
            // },4000);
                
                // else if(perm=="granted" && pp!=""){
                //     $(".ic-Super-toggle__input").prop("checked",true);

                //     update_notification_setting(0,uid,navigator.userAgent);

                // }
                
                // $(".ic-Super-toggle__input").prop("checked",false);
                // $(".ic-Super-toggle__input").prop("disabled",true);
            }




            // setTimeout(function(){
            //     get_new_notifications(starting_date);
            // },5000);
            var sto=setInterval(function(){
                if(OneSignal.initialized == true){
                    $(".prc4").hide();
                    $(".ic-Super-toggle--on-off").css("display","inline-block");
                    clearInterval(sto);
                }
            },800);


            

            $('.ic-Super-toggle__input').on('click',function(){
                $('.prc4').css("display","inline");
                $('.ic-Super-toggle--on-off').css("transform","translateX(0)");
                $('.ic-Super-toggle__input').prop("disabled",true);
                
                var perm = "";
                    if(("Notification" in window)){
                        perm=Notification.permission;
                    }
                // if($(this).prop("checked") == true){
                    console.log("notify yes");
                    
                    $(".notification-alert-msg").removeClass("noti-msg-success");
                    $(".notification-alert-msg").removeClass("noti-msg-danger");
console.log(perm);
                    if(perm=="default" || perm=="granted"){
                        
                        onManageWebPushSubscriptionButtonClicked();
                        // console.log(rr);
                        // if(rr==false){
                        //     // OneSignal.registerForPushNotifications().then(function(){
                        //     //     perm=Notification.permission;
                        //     //     console.log(perm);
                        //     //     if(perm=="granted"){
                        //     //         $(".notification-alert-msg").addClass("noti-msg-success");
                        //     //         $(".notification-alert-msg").html("Success!");
                        //     //         $(this).prop("checked",true)
                        //     //     }
                        //     //     else{
                        //     //         $(".notification-alert-msg").addClass("noti-msg-danger");
                        //     //         $(".notification-alert-msg").html("You have declined the notification permission.");
                        //     //         $(this).prop("checked",false);
                        //     //     }
                        //     //     $(".notification-alert-msg").toggleClass("noti-msg-show");
                        //     //     setTimeout(function(){
                        //     //         $(".notification-alert-msg").toggleClass("noti-msg-show")
                        //     //     },5000);
                        //     // });
                        // }
                        // else{
                        //     onManageWebPushSubscriptionButtonClicked();
                        //     // $(".notification-alert-msg").addClass("noti-msg-success");
                        //     // $(".notification-alert-msg").html("Success!");
                                    
                        //     // $(".notification-alert-msg").toggleClass("noti-msg-show");
                        //     // setTimeout(function(){
                        //     //     $(".notification-alert-msg").toggleClass("noti-msg-show")
                        //     // },5000);
                        // }
                    }
                    else {
                        console.log("asdsadsad");
                        if(perm=="denied" || perm=="blocked"){
                    // $("#big-noti-msg").removeClass("show");
                    // $(this).prop("checked",false);
                    console.log("2323");
                        $(".big-noti-msg").toggleClass("show");

                        }
                        
                    }
                    
                // }
                // else if($(this).prop("checked") == false){
                //     console.log("notify no");
                //     if(perm=="default" || perm=="granted"){
                //         onManageWebPushSubscriptionButtonClicked();

                //     }else{
                //         if(perm=="denied" || perm=="blocked"){
                //             $(".big-noti-msg").toggleClass("show");
                //         }
                //     }
                // }
                // setTimeout(function(){
                //     $('.ic-Super-toggle__input').prop("disabled",false);
                // $('.prc4').hide();
                    
                //     $('.ic-Super-toggle--on-off').css("transform","translateX(6.5rem)");
                
                // },3000);
            });

            $(".notifications").on("click",function(e){
                e.preventDefault();
                $(".dropm").toggleClass("show");
                $(".pulse").hide();
                        $(".marker").hide();
                        is_clicked = true;
                // if(ini_lo){
                //     ini_lo = false;
                    
                //     get_notifications(fc,3);
                // }
            });
            

            if(/Mobi/i.test(navigator.userAgent) || /Android/i.test(navigator.userAgent)) {
                $('#desk-noti-options-div').hide();
            }else{
                $('#mobile-noti-options-div').hide();

            }
                $("#err-noti-btn").on("click",function(){
                    $(".big-noti-msg").removeClass("show");
                    var perm = "";
                    if(("Notification" in window)){
                        perm=Notification.permission;
                    }
                    if(perm=="default" || perm=="granted"){
                        onManageWebPushSubscriptionButtonClicked();
                        // $(".notification-alert-msg").addClass("noti-msg-success");
                        // $(".notification-alert-msg").html("Success!");
                        
                        // $(".notification-alert-msg").toggleClass("noti-msg-show");
                        // setTimeout(function(){
                        //     $(".notification-alert-msg").toggleClass("noti-msg-show");
                        //     $('.ic-Super-toggle__input').prop("disabled",false);
                        //     $('.prc4').hide();
                                
                        //         $('.ic-Super-toggle--on-off').css("transform","translateX(6.5rem)");
                          
                        // },3500);
                    }else{
                        if(perm=="denied" || perm=="blocked"){
                            $(".notification-alert-msg").addClass("noti-msg-danger");
                        $(".notification-alert-msg").html("Settings were not updated. Please try again.");
                        
                        $(".notification-alert-msg").toggleClass("noti-msg-show");
                        setTimeout(function(){
                            $(".notification-alert-msg").toggleClass("noti-msg-show");
                            $('.ic-Super-toggle__input').prop("disabled",false);
                            $('.prc4').hide();
                $('.ic-Super-toggle__input').prop("checked",false);
                                
                                $('.ic-Super-toggle--on-off').css("transform","translateX(6.5rem)");
                          
                        },3500);
                        }
                    }
            });



            $("body").on("click",function(e){
                var x=parseFloat(e.clientX);
                var y=parseFloat(e.clientY);
                var w,h;
                var pos=$(".notifications").eq(0).offset();
                w=parseFloat($(".notifications").eq(0).innerWidth());
                h=parseFloat($(".notifications").eq(0).innerHeight());
                var t=parseFloat(($(".navbar").eq(0).innerHeight() - h)/2);
                
                if(pos.left<=0){
                h=parseFloat($(".notifications").eq(1).innerHeight());
                t=parseFloat(($(".navbar").eq(1).innerHeight() - h)/2);
                
                w=parseFloat($(".notifications").eq(1).innerWidth());
                pos=$(".notifications").eq(1).offset();
                }
                var l=parseFloat(pos.left);
                var r=parseFloat(pos.left+w);
                // var t=parseFloat(pos.top);
                var b=parseFloat(t+h);
                // console.log(x+" "+y);
                // console.log(l+" "+r+" "+t+" "+b);
                if(!(x>=l && x<=r)){
                    if(!(y>=t && y<=b)){
                    pos=$(".dropm").eq(0).offset();
                    w=parseFloat($(".dropm").eq(0).innerWidth());
                    h=parseFloat($(".dropm").eq(0).innerHeight());
                    t=parseFloat(($(".navbar").eq(0).innerHeight() - h)/2);
                    
                    if(pos.left<=0){
                    h=parseFloat($(".dropm").eq(1).innerHeight());
                    t=parseFloat(($(".navbar").eq(1).innerHeight() - h)/2);
    
                    w=parseFloat($(".dropm").eq(1).innerWidth());
                    pos=$(".dropm").eq(1).offset();
                    }
                    l=parseFloat(pos.left);
                    r=parseFloat(pos.left+w);
                    t=parseFloat(pos.top);
                    b=parseFloat(t+h);
                    // console.log(l+" "+r+" "+t+" "+b);
                    if(((x>=l && x<=r) && (y>=t && y<=b))==false){
                        
                        // console.log("out");
    is_clicked = false;
                        if($(".dropm").hasClass("show")){
                            $(".dropm").removeClass("show");
                            
                        } 
                        
                    }
                }
            }
            });
            // setTimeout(function(){
            //     if(noti_data.length!=10){
            //         $("#h4-load-more-noti").show();
            //     $(".prcnoti").hide();
            //     }
            //     else{
            //         if($(".cont-all-noti").hasScrollBar()){
            //             $("#h4-load-more-noti").show();
            //     $(".prcnoti").hide();
            //         }
            //     }
            // },2000);

            // $("body").on("click",function(e){
            //     console.log(e.target);
            //     var targ = $($.parseHTML(e.target));
            //     if(!(targ.hasClass("notifications") || targ.hasClass("ni-bell-55")  || targ.hasClass("dropm"))){
            //         if($(".dropm").hasClass("show")){
            //             $(".dropm").removeClass("show");
            //         }
            //     } 
            // })

            // $(".notifications").on("click",function(e){
            //     e.preventDefault();
            //     $(".dropm").toggleClass("show");
            // });

        $('.top-logout-btn').on('click',function(){
            
            // window.localStorage.removeItem('wasche-services');
            // window.localStorage.clear();
            // $('.cust-ul1').toggleClass('active');
            // $('.cust-ul2').toggleClass('active');
            
            // var $clientZoneLink = $('.header-client-zone-wrapper');
            // $clientZoneLink.find('-zone-link').remove();
            // $clientZoneLink.prepend("<a class='client-zone-link' data-close-location='right' href='#'><i class='fa fa-user' aria-hidden='true'></i></a>");
        // location.reload();
        OneSignal.setSubscription(false);
		setTimeout(function(){
			OneSignal.getUserId( function(userId) {
        location.href = "/ajax/logout/?oid=userId";
});
		},2500);
        // $.ajax({
        //     type: "POST",
        //     url: '/ajax/logout/',
        //     data: $("#csrf").serialize(),
        //     success: function( response ) {
        //         // var response = $.parseJSON(response);
        //         console.log(response);
        //         location.href = "/u/";

        //     },
        //     error:function (jqXHR, exception) {
        //                 var msg = '';
        //                 if (jqXHR.status === 0) {
        //                     msg = 'Not connect.\n Verify Network.';
        //                 } else if (jqXHR.status == 404) {
        //                     msg = 'Requested page not found. [404]';
        //                 } else if (jqXHR.status == 500) {
        //                     msg = 'Internal Server Error [500].';
        //                 } else if (exception === 'parsererror') {
        //                     msg = 'Requested JSON parse failed.';
        //                 } else if (exception === 'timeout') {
        //                     msg = 'Time out error.';
        //                 } else if (exception === 'abort') {
        //                     msg = 'Ajax request aborted.';
        //                 } else {
        //                     msg = 'Uncaught Error.\n' + jqXHR.responseText;
        //                 }
        //                 console.log(msg);
        //             // bootbox.alert({
        //             // 			title:"Error",
        //             // 			message:msg+" Please Try again later. Thank you.",
        //             // 			backdrop:true
        //             //         });
        //     }
                
        // });
            // ClientZone.updateClientIcon();
        
        });
        console.log('starting');
        var $client=$("#user-log").data().name;
        if($client!="no"){
        //   var $client = JSON.parse(window.localStorage.getItem("wasche-services"));
          $('.user-name').html($client.fn);
          $('.pname').html($client.fn + " " + $client.ln);
        if ($client.profile_image!='') {
            $('.avatar').html("<img class='Image placeholder'></img>");
                  console.log('1');
          $('.avatar img').attr('src',$client.profile_image);
          $('.avatar img').attr('data',$client.profile_image);
          $('.avatar img').css('width','36px');
          $('.avatar img').css('height','36px');

        //   var ele=document.getElementsByClassName('cust-top-img');
        //   var hei=ele[0].height;
        // var wid=ele[0].width;
        // console.log(hei);
        // console.log(wid);

      
      }
     
      else{
        $('.avatar').html("<img class='Image placeholder'></img>");
        console.log('1');
        if($client.gender=='Male'){
$('.avatar img').attr('src',"/static/male-avatar.svg");
        }
        else{
$('.avatar img').attr('src',"/static/female-avatar.svg");

        }
// $('.avatar img').attr('data',$client.profile_image);
$('.avatar img').css('width','36px');
$('.avatar img').css('height','36px');

    //    if ($client.fn) {
    //     console.log('3');
    //        $('.avatar img').remove();
    //       $('.avatar').html( $client.fn[0]);
    //       $('.avatar').css('font-size','1rem');
          
    //   }
    }
      console.log('added icon');
        }
      });
//# sourceMappingURL=_site_dashboard_free/assets/js/dashboard-free.js.map